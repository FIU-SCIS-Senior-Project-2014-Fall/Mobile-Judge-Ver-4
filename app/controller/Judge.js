Ext.define("OnlineJudges.controller.Judge", { extend: "Ext.app.Controller", config: { views: ["judge.Home", "judge.Confirmation", "FiuMap", "judge.JudgeGraph"], stores: ["Questions", "judge.Students", "LoginInstance"], refs: { judgeHome: "judgeHome", backBtn: "judgeHome #back", logoutBtn: "judgeHome #logoutBtn", submitBtn: "judgeHome #submitBtn", showMapBtn: "judgeHome #showMapBtn", wizard: "judgeConfirmation", rolesBtn: "judgeHome #rolesBtnJudge", judgeGraphBtn: "judgeHome #judgeGraphBtn" }, control: { judgeHome: { show: "onJudgeLoadRoles" }, "judgeHome list": { itemtap: "onJudgeStudentsListTap" }, "judgeHome button[ui='back']": { tap: "onBackButtonTap" }, "judgeHome #submitBtn": { tap: "onSubmitGradeButtonTap" }, "judgeConfirmation button[ui=confirm]": { tap: "onJudgeConfirmationBtnTap" }, "studentHome #showMapBtn": { tap: "onShowMapBtnTap" }, "judgeHome #showMapBtn": { tap: "onShowMapBtnTap" }, "adminStudentView #showMapBtn": { tap: "onShowMapBtnTap" }, "judgeHome #judgeGraphBtn": { tap: "onShowJudgeGraphBtnTap" } } }, onShowMapBtnTap: function () { Ext.php.Settings.load(function (e) { if (!e || Ext.isEmpty(e.MapImage)) { Ext.Msg.alert("Show Map", "Map not available yet", Ext.emptyFn); return } var t = "resources/" + e.MapImage.split("/").pop(), n = OnlineJudges.map; if (!n || OnlineJudges.mapUrl !== t) { OnlineJudges.mapUrl = t; if (n) n.destroy(); n = Ext.Viewport.add(Ext.create("widget.fiumap", OnlineJudges.mapUrl)) } (OnlineJudges.map = n).show({ type: "slide", direction: "up" }) }) }, onJudgeConfirmationBtnTap: function () { var e = this.getWizard(), t = e.getValues(), n = false; if (Ext.isEmpty(t.Password)) n = "Password cannot be blank."; else if (t.Password.length < 5) n = "Password is too short"; else if (Ext.isEmpty(t.Confirm)) n = "Please retype your password"; else if (t.Password !== t.Confirm) n = "Passwords don't match"; else if (Ext.isEmpty(t.FirstName)) n = "Please enter your First Name"; else if (Ext.isEmpty(t.LastName)) n = "Please enter your Last Name"; if (n !== false) return Ext.Msg.alert("Registration", n, Ext.emptyFn); e.setMasked({ xtype: "loadmask", message: "Submitting..." }); Ext.php.Judges.register(t, function (t) { e.setMasked(false); if (t === true) { Ext.Viewport.removeAll().add(Ext.create("widget.login")); t = "Your account was created successfully" } Ext.Msg.alert("Registration", "" + t, Ext.emptyFn) }) }, onSubmitGradeButtonTap: function () { var e = this, t = e.getJudgeHome(), n = OnlineJudges.user.id, r = t.down("formpanel"), i = t.student, s = {}, o = ""; t.setMasked({ xtype: "loadmask", message: "Submitting..." }); Ext.Object.each(r.getValues(), function (e, t) { if (e === "Comments") o = t; else s[e] = t }); Ext.php.Judges.gradeStudent(n, i.get("id"), s, o, function (n) { t.setMasked(false); if (!n) Ext.Msg.alert("Error", "Could not submit grade, the professor already accepted it", Ext.emptyFn); else { i.set("QuestionValues", Ext.encode(s)); i.set("JudgeGrade", n); i.set("Comments", o); i.set("Accepted", null); t.pop(); e.onBackButtonTap() } }) }, onBackButtonTap: function () { this.getLogoutBtn().show(); this.getShowMapBtn().show(); this.getSubmitBtn().hide(); this.getJudgeGraphBtn().show() }, onJudgeStudentsListShow: function (e) { var t = e.down("list"), n = t.getStore(), r = n.getProxy(), i = OnlineJudges.user.id; r.setExtraParams({ id: i }); n.load(); n = Ext.getStore("Questions"); if (!n.isLoaded()) n.load() }, onJudgeStudentsListTap: function (e, t, n, r) { var i = this.getSubmitBtn(); if (!i.isHidden()) return; var s = this.getJudgeHome(), o = Ext.getStore("Questions"), u = Ext.decode(r.get("QuestionValues")) || {}, a = { Comments: r.get("Comments") }; this.getLogoutBtn().hide(); this.getShowMapBtn().hide(); i.show(); s.student = r; var f = { title: r.get("FirstName") + " " + r.get("LastName"), defaultType: "fieldset", items: [] }; o.each(function (e) { var t = "Q" + e.get("id"); a[t] = u[t] || ""; f.items.push({ title: e.get("Text"), items: [{ xtype: "spinnerfield", label: "Grade", name: t, maxValue: 10, stepValue: 1, minValue: 1, defaultValue: 10 }] }) }); f.items.push({ title: "Comments", items: [{ xtype: "textareafield", name: "Comments" }] }); s.push(Ext.create("widget.formpanel", f).setValues(a)) }, refreshFunc: function () { var e = Ext.getStore("Livestats"); var t = 0; clearInterval(taskLiveStatsTimer); taskLiveStatsTimer = setInterval(function () { var e = 0; var t = Ext.StoreMgr.lookup("Livestats"); t.load() }, 1e4) }, onShowJudgeGraphBtnTap: function () { var e = this.getJudgeHome(), t = e.getNavigationBar(); this.getLogoutBtn().hide(); this.getShowMapBtn().hide(); this.getJudgeGraphBtn().hide(); var n = Ext.getStore("Livestats"); var r = Ext.direct.Manager.parseMethod("Ext.php.Livestats.getAllControlled"); n.getProxy().setDirectFn(r); n.load(); n.setSorters("RawGrade", "ApprovedGrade"); this.getApplication().getController("Judge").refreshFunc(); e.push({ xtype: "judgeGraph" }) }, onJudgeLoadRoles: function () { var e = this, t = this.getJudgeHome(), n = t.getNavigationBar(), r = Ext.getStore("LoginInstance"), s = r.getById(0), o = this.getRolesBtn(); e.onJudgeStudentsListShow(t); o.setListeners({ tap: function () { var t = window.innerWidth > 0 ? window.innerWidth : screen.width, n = window.innerHeight > 0 ? window.innerHeight : screen.height, r = new Ext.Panel({ floating: true, centered: true, modal: true, items: [] }); Ext.php.LoginMain.getRoles(s.get("email"), s.get("password"), function (t) { var n = t.Roles.split(";"); for (i = 0; i < n.length; i++) { if (n[i] == "admin") { adminRoleTab = { xtype: "button", text: "Admin", margin: "5", handler: function () { r.hide(); e.loadMainView("adminMain", { title: "Home" }) } }; r.add(adminRoleTab) } else if (n[i] == "judge") { judgeRoleTab = { xtype: "button", text: "Judge", margin: "5", handler: function () { r.hide(); e.loadMainView("judgeHome") } }; r.add(judgeRoleTab) } else if (n[i] == "student") { studentRoleTab = { xtype: "button", text: "Student", margin: "5", handler: function () { r.hide(); e.loadMainView("studentHome") } }; r.add(studentRoleTab) } } }); r.add({ xtype: "button", docked: "bottom", text: "Cancel", listeners: { tap: function () { r.hide() } } }); r.show() } }) }, loadMainView: function (e, t) { Ext.Viewport.removeAll().add(Ext.create("widget." + e, Ext.apply({ title: "CIS 4911 Online Judges" }, t || {}))) } })